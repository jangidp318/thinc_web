name: 🧠 Thinc Monorepo CI/CD

on:
  push:
    branches:
      - main
      - staging
      - production
  pull_request:
    branches:
      - main
      - staging

jobs:
  setup:
    name: 🧩 Setup & Install
    runs-on: ubuntu-latest

    steps:
      - name: 🛎️ Checkout repository
        uses: actions/checkout@v4

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      # ✅ Fix: Install PNPM and persist to PATH
      - name: 📦 Install PNPM
        run: |
          corepack enable
          corepack prepare pnpm@10.14.0 --activate
          echo "PNPM version: $(pnpm --version)"

      - name: ♻️ Cache PNPM Store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: 📦 Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: 🧹 Clean workspace
        run: |
          chmod +x scripts/clean-all.sh
          ./scripts/clean-all.sh

  lint-and-typecheck:
    name: 🧪 Lint + TypeCheck
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Install PNPM
        run: |
          corepack enable
          corepack prepare pnpm@10.14.0 --activate
          echo "PNPM version: $(pnpm --version)"

      - name: 📦 Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: 🧹 Run ESLint
        run: pnpm lint

      - name: 🔍 TypeScript Check
        run: pnpm typecheck

  backend-tests:
    name: ⚙️ Backend Build + Test
    runs-on: ubuntu-latest
    needs: [setup, lint-and-typecheck]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Install PNPM
        run: |
          corepack enable
          corepack prepare pnpm@10.14.0 --activate
          echo "PNPM version: $(pnpm --version)"

      - name: 📦 Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: 🧱 Build Backend
        run: |
          cd backend
          pnpm run build

      - name: 🧪 Run Backend Tests
        run: |
          cd backend
          pnpm run test || echo "⚠️ No tests yet"

  frontend-build:
    name: 🖥️ Frontend Build
    runs-on: ubuntu-latest
    needs: [setup, lint-and-typecheck]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 📦 Install PNPM
        run: |
          corepack enable
          corepack prepare pnpm@10.14.0 --activate
          echo "PNPM version: $(pnpm --version)"

      - name: 📦 Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: 🧱 Build Frontend
        run: |
          cd frontend
          pnpm run build

  docker-verify:
    name: 🐳 Docker Compose Verification
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-build]

    steps:
      - uses: actions/checkout@v4

      - name: 🐳 Verify Docker
        run: |
          docker compose build
          docker compose up -d
          sleep 10
          docker compose ps
          docker compose down
